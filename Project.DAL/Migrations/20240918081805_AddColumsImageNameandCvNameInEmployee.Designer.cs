// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.DAL.ConnectionData;

#nullable disable

namespace Project.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240918081805_AddColumsImageNameandCvNameInEmployee")]
    partial class AddColumsImageNameandCvNameInEmployee
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project.DAL.Entities.City", b =>
                {
                    b.Property<int>("City_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("City_Id"));

                    b.Property<string>("City_Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("Country_Id")
                        .HasColumnType("int");

                    b.HasKey("City_Id");

                    b.HasIndex("Country_Id");

                    b.ToTable("Cities", (string)null);
                });

            modelBuilder.Entity("Project.DAL.Entities.Country", b =>
                {
                    b.Property<int>("Country_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Country_Id"));

                    b.Property<string>("Country_Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Country_Id");

                    b.ToTable("Countries", (string)null);
                });

            modelBuilder.Entity("Project.DAL.Entities.Department", b =>
                {
                    b.Property<int>("Department_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Department_Id"));

                    b.Property<string>("Department_Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Department_Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Department_Id");

                    b.HasIndex("Department_Code")
                        .IsUnique();

                    b.HasIndex("Department_Name")
                        .IsUnique();

                    b.ToTable("Departments", (string)null);
                });

            modelBuilder.Entity("Project.DAL.Entities.District", b =>
                {
                    b.Property<int>("District_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("District_Id"));

                    b.Property<int?>("City_Id")
                        .HasColumnType("int");

                    b.Property<string>("District_Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("District_Id");

                    b.HasIndex("City_Id");

                    b.ToTable("Districts", (string)null);
                });

            modelBuilder.Entity("Project.DAL.Entities.Employee", b =>
                {
                    b.Property<int>("Employee_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Employee_Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CVName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 9, 18, 11, 18, 3, 179, DateTimeKind.Local).AddTicks(5086));

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Department_Id")
                        .HasColumnType("int");

                    b.Property<int?>("District_Id")
                        .HasColumnType("int");

                    b.Property<string>("Employee_Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Employee_Fname")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Employee_Lname")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Employee_Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<double>("Employee_Salary")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10, 2)
                        .HasColumnType("float(10)")
                        .HasDefaultValue(4000.0);

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsUpdated")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Employee_Id");

                    b.HasIndex("Department_Id");

                    b.HasIndex("District_Id");

                    b.HasIndex("Employee_Email")
                        .IsUnique()
                        .HasFilter("[Employee_Email] IS NOT NULL");

                    b.HasIndex("Employee_Phone")
                        .IsUnique()
                        .HasFilter("[Employee_Phone] IS NOT NULL");

                    b.ToTable("Employees", null, t =>
                        {
                            t.HasCheckConstraint("CK_Salary", "Employee_Salary between 4000 and 10000");
                        });
                });

            modelBuilder.Entity("Project.DAL.Entities.City", b =>
                {
                    b.HasOne("Project.DAL.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("Country_Id")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_Country_Id");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Project.DAL.Entities.District", b =>
                {
                    b.HasOne("Project.DAL.Entities.City", "City")
                        .WithMany("Districts")
                        .HasForeignKey("City_Id")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_City_Id");

                    b.Navigation("City");
                });

            modelBuilder.Entity("Project.DAL.Entities.Employee", b =>
                {
                    b.HasOne("Project.DAL.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("Department_Id")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_Department_Id");

                    b.HasOne("Project.DAL.Entities.District", "District")
                        .WithMany("Employees")
                        .HasForeignKey("District_Id")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_District_Id");

                    b.Navigation("Department");

                    b.Navigation("District");
                });

            modelBuilder.Entity("Project.DAL.Entities.City", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("Project.DAL.Entities.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("Project.DAL.Entities.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Project.DAL.Entities.District", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
